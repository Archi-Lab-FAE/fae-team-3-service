version: "3.7"

services:
  postgres:
    image: postgres:10.1
    volumes:
      - nachrichtensystem_db:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=_FAE_DeMO_MS_2019
      - POSTGRES_USER=nachrichtensystem
      - POSTGRES_DB=nachrichtensystem
      - PGDATA=/var/lib/postgresql/data/pgdata
    networks:
      - service_internal
  springboot-service:
    image: docker.nexus.archi-lab.io/archilab/fae-team-3-service
    ports:
      - "8081:8081"
    environment:
      - TZ=Europe/Berlin
      - NACHRICHTENSYSTEM_DB=postgres
      - NACHRICHTENSYSTEM_DB_NAME=nachrichtensystem
      - NACHRICHTENSYSTEM_DB_USER=nachrichtensystem
      - NACHRICHTENSYSTEM_DB_PW=_FAE_DeMO_MS_2019
    depends_on:
      - postgres
    networks:
      - service_internal
      - fae_backend

#### For local testing only ###
  zoo1:
    image: zookeeper:3.4.9
    hostname: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo1:2888:3888
    volumes:
      - ./zk-single-kafka-single/zoo1/data:/data
      - ./zk-single-kafka-single/zoo1/datalog:/datalog
    networks:
      - service_internal
      - fae_backend

  kafka1:
    image: confluentinc/cp-kafka:5.3.1
    hostname: kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://172.20.0.4:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./zk-single-kafka-single/kafka1/data:/var/lib/kafka/data
    depends_on:
      - zoo1
    networks:
      - service_internal
      - fae_backend

#########
volumes:
  nachrichtensystem_db: {}

networks:
  service_internal:
  fae_backend:
    external: true